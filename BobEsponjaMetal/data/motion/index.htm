<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bob Metal</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.1/css/bulma.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <!--<link rel="stylesheet" href="https://jenil.github.io/bulmaswatch/yeti/bulmaswatch.min.css"> -->
    <link rel="stylesheet" href="mycss.css">
    <!--<script defer src="https://use.fontawesome.com/releases/v5.3.1/js/all.js"></script>-->
    
  </head>
  <body>
  
  <!--NAVBAR-->
  <nav class="navbar is-tab" role="navigation" aria-label="main navigation">
    <!--NAV-BRAND-->
    <div class="navbar-brand">
      <a class="navbar-item" href="https://omecatronico.com.br">
        <img src="https://omecatronico.com.br/blog/wp-content/uploads/2020/01/logo_recortado.png" alt="Sistema de controle de servos e movimentos" width="112" height="28">
       
      </a>
      <!--NAV-BURGUER-->
      <a role="button" class="navbar-burger" aria-label="menu" aria-expanded="false">
        <span aria-hidden="true"></span>
        <span aria-hidden="true"></span>
        <span aria-hidden="true"></span>
      </a>
    </div>
    <!--NAV-MENU-->
    <div id="navmenu" class="navbar-menu">
      <div class="navbar-start">
          <a class="navbar-item" href="/index.htm">Control</a>
          <a class="navbar-item" href="/audio/index.htm">Audio</a>
          <a class="navbar-item is-tab is-active" href="/motion/index.htm#">Motion</a>
          <a class="navbar-item" href="/config/index.htm">Config</a>
          <a class="navbar-item" href="/edit">Editor</a>
          
      </div>
      <div class="navbar-end">
        <p id="nomeRobo" class="navbar-item"></p>
      </div>
      
   </div>
  </nav> 
  <br>
<!--Colunas-->
<div class="columns is-centered has-background-grey-lighter">
    <div id="mov" class="column is-2">
        <!--coluna movimentos completos--> 
        <div class="box">
            <p class="tag is-medium is-light">Pasta: /Motion/</p>
            
            <div class="panel-block">
              <input id="newMotionName" class="input is-small is-info" type="text" placeholder="nome movimento">
              <button class="button is-small is-info is-outlined" onclick="newMotion()">Criar</button>
            </div>
                     
            <!--Lista dos arquivos do SD-->
            <div id="arquivos">
              <a class='panel-block'>Listar arquivos existentes...</a>
            </div>
            
            <div class="panel-block">
              <button class="button is-link is-outlined is-fullwidth" onclick="listSD('/motion', '.json')">Atualizar listagem</button>
            </div>
          </div>
    </div>
      
    <div class="column">
      <p id="infoColunaTabela" class="tag is-medium is-info">Crie ou abra um arquivo...</p>
      <div id="boxTabela" class="box">
      <b><p id="motionNameMenuId" class="tag is-medium is-light">Arquivo: ...</p></b><!--salvar-->
      <a class="button is-info is-outlined" onclick="salvarTabelaSD('tbl')">
        <span class="icon is-small"><i class='fas fa-sd-card'></i></span>
        <span>Salvar Alterações</span>
      </a>
          <div class="columns">
            
            <!--dropdown para escolha do MP3------------------------------------------>
            <div class="column is-3">
              <div class="field has-addons">
                <!--escolher MP3-->
                <p class="control has-icons-left">
                  <span class="select">
                    <select id="selectMP3id" onchange="mp3DropChange(this.options[this.selectedIndex].text)">
                      <option></option>
                      <option>STOP</option>
                    </select>
                  </span>
                  <span class="icon is-small is-left"><i class="far fa-file-audio"></i></span>
                </p>
                
              </div>
            </div>
            <!--botoes mais menos e range slider------------------------------------------>
            <div class="column is-3">
              <div id="conjuntoRangeSlide" class="field has-addons">
                <!--range-->
                <p class='control'>
                  <button id='btmenos1' class='button is-info' onclick='btmenosfunc("1")'>-</button>
                </p>
                <p class='control'>
                  <button id='btmais1' class='button is-info' onclick='btmaisfunc("1")'>+</button>
                </p>
                <p class='control is-expanded'>
                    <div class='slidecontainer'><input type='range' min='0' max='180' value='90' class='slider' id='range1' oninput='slideMovido()'></div>
                </p>
              </div>
            </div>
            <!--botoes adicionar linha e remover linha---------------------------------------->
            <div class="column is-3">
                <a class="button is-success is-outlined" onclick="adicionaLinha('tbl')">+ Linha</a>
                <!--remover linha-->
                <a class="button is-danger is-outlined" onclick="removeLinha('tbl')">
                  <!--<span class="icon is-small"><i class="fa fa-times"></i></span>-->
                  <span> - Linha</span>
                </a>
                
            </div> 
            
          </div>  

     
      
      <div class="table-container">
      <table id="tbl" class="table is-narrow is-expanded">
        
      </table>
    </div>
  </div>
    </div>
    
</div>


<footer class="footer">
  <div class="content has-text-centered">
    <p>
      <strong>Bob Metal</strong> by <a href="https://omecatronico.com.br">Almir Ventura</a>. The source code is licensed
      <a href="http://opensource.org/licenses/mit-license.php">MIT</a>. The website content
      is licensed <a href="http://creativecommons.org/licenses/by-nc-sa/4.0/">CC BY NC SA 4.0</a>.
    </p>
  </div>
</footer>

<script>

window.onload = function(){
  document.getElementById("boxTabela").style.visibility = "hidden"; //esconde tabela
  loadAudioListSD();      //ao terminar de carregar a janela... baixar a lista de audios...
  loadConfig();           //carrega as configuraçoes do robo.
  //adiciona um listener para detectar clique em qualquer celula da tabela
  document.getElementById('tbl').onclick = function(e){
    //alert(event.target.innerText);
    // var e = e || window.event;
    //  var target = e.target || e.srcElement;
    if(event.target.id == null){
      console.log(event.target);      //id nulo.. nao chama função...
    }else{
      selecionaCelula(event.target.id);
    }
  };
};


    //Adiciona event listeners no burger e no menu e ao clicar vai inserir ou retirar a classe "is-active"  
    var burger = document.querySelector('.navbar-burger');
    var menu = document.querySelector('.navbar-menu');
    burger.addEventListener('click', function() {
      burger.classList.toggle('is-active');
      menu.classList.toggle('is-active');
    });

    //variáveis globais============================================
    var arquivo_aberto = false; //algum arquivo para edição?
    var total_servos = 16;      //será sobrescrito ao carregar json com as configurações

    var id_disp_nova_celula = 1; //ao criar celulas esta variavel vai apontar para novo id. sempre crescente
    var id_celula_anterior = 1;  //para fazer operações de seleçao individual de celula
    var JSON_obj_SD;
    var motion_path="";
        
    var total_linhas=1;
    var linha_selecionada=1;
    var tempo = 1000;
    var array_linha= [total_servos+1];
    var array_movimento = [];
    array_movimento[0]=array_linha;


    //document.getElementById("tbl").addEventListener('click', function (){alert(this.innerHTML);});

    function mp3DropChange(mp3_name){
      console.log(mp3_name);
      var x = document.getElementsByTagName("tr");      //lista todos os <tr>
      var linha_selecionada=-1;
        //agora varre todas as linhas "tr" em busta de "is-selected"
      for (var i = 0; i < x.length; i++) {
            if(x[i].className == 'is-selected'){
              console.log("achei:" +i);
              var tabela = document.getElementById("tbl");  //pega tabela.
              tabela.rows[i].cells[0].innerHTML = mp3_name;            //localiza linha i da coluna 0 e atribui
            }
        }
    }

    
    //click no botao de nova animaçao==========================================================================
    function newMotion(){
      var name = document.getElementById("newMotionName").value;
      //tem algo no campo nome ?
      if(name.length === 0){                 
        document.getElementById("arquivos").innerHTML = "<p class='help is-danger'>Digite um nome válido!</p>"; 
        return;
      }
      document.getElementById("newMotionName").value = "";  //limpa o campo nome
      //criar path, tirar espaços e acrescentar o ".json"...
      var pathSD = "/motion/" + name.replace(/ /g,"-") + ".json"; //cria o path completo "/motion/nomearquivo.json" e substitui todos os espaços por hifens
      var objJSON = {
        "motionName":"andar",
        "roboName":"BOB Metal",
        "numServos":total_servos,
        "animation": [
          {"a":"STOP","t":1000,"s":[]}
          ]
      }
      
      var txt_json = JSON.stringify(objJSON);
      console.log(txt_json);
      
      //preencher vetor de servos com a quantidade correta de servos
      var i = 0;
      while(i < total_servos){
        objJSON.animation[0].s[i] = 90;   //acrescenta servo com valor de 90 graus
        i++;
      }
      
      txt_json = JSON.stringify(objJSON);
      console.log(txt_json);
      upload_json(txt_json, pathSD);    //enviar arquivo para o SD
      listSD('/motion', '.json');       //Upload ok! Relistar movimentos do SD
      loadmoveSD(pathSD);               //Agora abre o arquivo recem criado!
    }

    //SELECIONAR CELULA======================================================================================
    function selecionaCelula(idCelula){

      var cel_antiga = document.getElementById(id_celula_anterior);  //localiza celula antiga
      if(cel_antiga == null){
        id_celula_anterior = idCelula;                               //por algum motiv a antiga não existe, entao faz ser a atual
        cel_antiga = document.getElementById(id_celula_anterior);    //localiza celula antiga;
      }
      
      var celula = document.getElementById(idCelula);                //localiza celula nova e "pinta" ela
      if(celula == null){                                            //por algum motivo a nova não existe, entao deica pra la
        return;
      }
      
      cel_antiga.style = "background-color: transparent";           //e "despinta" antiga
      celula.style = "background-color:red";                        //pinta a celula atual...
    
      console.log("cel: "+idCelula + " valor: "+celula.innerHTML);
      
      id_celula_anterior = idCelula;                                 //atualiza id para na proxima esta ser a "antigaa"
      
      //celula é da coluna mp3?
      if((idCelula%(2+total_servos)) === 1){
        console.log("cel: "+idCelula + " é mp3!");
        document.getElementById("selectMP3id").focus();             //da foco no dropdown... 
        rangeSlideHide();                                           //esconde o range slide                              
        return;     //linha0: id 1 a 18, linha1: id 19 a 36. Entao resto 1 de divisao por 17 estamos na primeira coluna
      }
      //celula é da coluna time?
      if((idCelula%(2+total_servos)) === 2){
        console.log("cel: "+idCelula + " é o tempo!");
        rangeSlideShowTime();                                       //mostra range slide com range configurado para tempo                              
      }else{
        rangeSlideShowServo();                                      //mostra range slide com range configurado para servo
      }
           
      document.getElementById("range1").value = celula.innerHTML;    //ajusta slider para ficar na posicçao dessa nova celula.

    }

    //Atualiza Array=========================================================================================
    function slideMovido(){
      var range_value = document.getElementById("range1").value;            //captura valor do range slider
      document.getElementById(id_celula_anterior).innerHTML = range_value;  //atualiza celula com o valor novo
      
    }
    function rangeSlideHide(){
      document.getElementById("conjuntoRangeSlide").style.visibility = "hidden";       //torna visivel o range
    }
    function rangeSlideShowTime(){
      document.getElementById("conjuntoRangeSlide").style.visibility = "visible";       //torna visivel o range
      document.getElementById("range1").min = 100;                          //min 100ms
      document.getElementById("range1").max = 10000;                        //max 10000ms
    }
    function rangeSlideShowServo(){
      document.getElementById("conjuntoRangeSlide").style.visibility = "visible";     //torna visivel o range
      document.getElementById("range1").min = 0;                          //min 0 graus
      document.getElementById("range1").max = 180;                        //max 180 graus
    }
    
    function btmenosfunc(i) {
        document.getElementById("range1").value--;  //mudanmos o value do range...
        slideMovido();//atualiza todos os arrays com todos os ranges
    }
    
    function btmaisfunc(i) {
        document.getElementById("range1").value++;//mudanmos o value do range...
        slideMovido();//atualiza todos os arrays com todos os ranges
    }
         
    function atualizalinha(linhaescolhida) {
        
        var x = document.getElementsByTagName("tr");      //lista todos os <tr>
        var i;
        //limpa classe'is-selected' de todos os tr
        for (i = 0; i < x.length; i++) {
            x[i].className = '';
        }
        //evitar de aplicar"is-selected na linha 0 menu!
        if(linhaescolhida > 0){
            console.log("Linha selecionada: "+ linhaescolhida); //linha que sera selecionada
            x[linhaescolhida].className = 'is-selected';//agora aplica 'is-selected' no tr que deve ficar ativo
            //de acordo com a linha achamos o id do mp3...

        }
        //var dropdownMP3 = document.getElementById("selectMP3id")
        linha_selecionada = linhaescolhida;
       
     }
    
    //Adcionar nova linha na tabela==============================================
    function adicionaLinha(idTabela) {
      //salvar arraylinha no array movimento
      //fazer arraylinha apontar para ultima posição que foi criada e salvar todos os ranges
      //criar nova linha na tabela e jogar os dados do array
      //apos criar linha, alterar para  
            
      var tabela = document.getElementById(idTabela); //seleciona tabela
      total_linhas = tabela.rows.length;              //pega total de linhas começa com 1. Apenas o header ja conta como 1
      console.log("Tabela possui: "+total_linhas+" linha(s)");

      var linha = tabela.insertRow(-1);       // Create an empty <tr> element and add it to the last position(-1) of the table:
      linha.addEventListener('click', function(){atualizalinha(this.rowIndex)});    //add um event listener para clique na linha...
      total_linhas = tabela.rows.length;      //pega total de linhas começa com 1.
      linha_selecionada = total_linhas - 1;       //linha atual é a ultima linha (começa com 1)
      atualizalinha(linha_selecionada);       //chama função para pintar a linha selecionada 
      
      console.log("Agora Tabela possui: "+total_linhas+" linhas");
      console.log("Numero de servos: "+total_servos);
      //linha.addEventListener('click', function(){alert(this.rowIndex)});
      //linha.addEventListener('click', function(){atualizalinha(this.rowIndex)});
           
      //criar e preencher as celulas dessa nova linha min 2 celulas(0a1), max 18(0a17)
      
      var i;
      for(i=0; i < total_servos + 2; i++){
        var celula = linha.insertCell(i);
        if(i === 0){
          celula.innerHTML = "STOP";  //audio
        }else if(i === 1){
          celula.innerHTML = 1000;  //tempo
        }else{
          celula.innerHTML = 90; //Servo
        }
        celula.id = id_disp_nova_celula; //atrela o id a nova celula...
        console.log("Novo id atrelado: "+id_disp_nova_celula);
        id_disp_nova_celula++;           //prepara id pra nova rodada
      }
                
    }

      // funcao remove uma linha da tabela===========================================
      /*remove linha escolhida da tabela. Os Ids sao crescentes entao nao tem problema de
       repetir ou ficar faltando alguns range de id. O mais importante sao id unicos em cada celula!*/
  function removeLinha(idTabela) {
    var tabela = document.getElementById(idTabela); //pegamos a tabela 
    total_linhas = tabela.rows.length;              //o total de linhas... começa com 1.  
    //verifica se so temos o cabeçalho...
    if(total_linhas < 2){
      alert("não há linhas para Remover!");         //so tem linha 1 (cabeçalho)
      return;//não tem o que deletar. Sai da função.
    }
          
    document.getElementById(idTabela).deleteRow(linha_selecionada);   //apago a linha atual
    total_linhas--; //diminui uma do total 
    //checar para onde apontamos a "nova" linha atual
    if(linha_selecionada < total_linhas){
      atualizalinha(linha_selecionada);
    }else{
      atualizalinha(total_linhas-1); 
    }
         
      }     
      

  // funcao ajax para listar arquivos do SD card==================================
  function listSD(dir, tipoArquivo) {
          document.getElementById("arquivos").innerHTML = "<a class='panel-block'>Crie ou atualize...</a>";
          var xhttp = new XMLHttpRequest();
          xhttp.onreadystatechange = function() {
            if (this.readyState == 4 && this.status == 200) {
              var myObj = JSON.parse(this.responseText);  //decodifica o json de retorno
              //varrer o objeto pegando todos os campos
              var html_temp="";
              for (x in myObj) {
                  //procura .mp3 no nome do arquivo. search retorna -1 quando nao acha
                  if(myObj[x].name.search(tipoArquivo) > 1){
                    html_temp+="<div class='panel-block'>";
                    html_temp+="<button class='button is-link is-outlined is-small' onclick='deleteFromSD(\""+myObj[x].name+"\")'>Delete</button>";
                    html_temp+="<span onclick='loadmoveSD(\""+myObj[x].name+"\")'><span class='panel-icon'><i class='fas fa-file-alt' aria-hidden='true'></i></span>";
                    html_temp+=myObj[x].name.replace(dir+"/","");
                    html_temp+="</span></div>";
                  }
                      
                
              }
              document.getElementById("arquivos").innerHTML = html_temp;  //joga todo o html gerado na coluna
            }
          };
          xhttp.open("GET", "/list?dir=" + dir, true);
          xhttp.send();
      }



//Deletar motion do SD card==================================================================
function deleteFromSD(nome_arquivo){
        if(confirm("Apagar " + nome_arquivo +"?")){
            xmlHttp = new XMLHttpRequest();
            xmlHttp.onreadystatechange = function() {
            if (this.readyState == 4 && this.status == 200) {
                listSD('/motion', '.json');   //Delete ok! Relistar SD
            }
            };
            var formData = new FormData();
            formData.append("path", nome_arquivo);
            xmlHttp.open("DELETE", "/edit");
            xmlHttp.send(formData);
        
        }
    }


      function limparTabela(){
        //precisamos limpar a tabela...
        var i=0;
        var tabela = document.getElementById("tbl");  //captura tabela
        total_linhas = tabela.rows.length;            //descobre total de linhas. começa em 1... ja o Id começa em 0 !!!
        for(i=total_linhas; i>0;i--){
          tabela.deleteRow(i-1);                      //Id começa em 0! apaga da ultima linha ate a 0
        }
      }
      
      //GERAR TABELA COM OBJETO JSON RECEBIDO========================================================
      function gerarTabela(path){

        document.getElementById("infoColunaTabela").style.display = "none";                                 //esconde o texto informativo
        document.getElementById("motionNameMenuId").innerText = "Arquivo: " + path.replace("/motion/","");  //escreve o nome do arquivo aberto
        
        var tabela = document.getElementById("tbl");          //captura tabela
        var animation = JSON_obj_SD["animation"];             //pega apenas objetos do "grupo animation"
        var numlinha=1;                                       //linha 0 é o cabeçalho da tabela
        
        //criando cabeçalho da tabela
        var header = tabela.createTHead();                    //cria um THead
        var THeadRow = header.insertRow(0);                   //adiciona uma linha no THead
        var THeadCell = THeadRow.insertCell(-1);               //cria celula
        THeadCell.innerHTML = "Audio";                        //preenche com "Audio"
        
        THeadCell = THeadRow.insertCell(-1);                   //cria nova celula...
        THeadCell.innerHTML = "Time";
        //agora preenche o restante com os servos ...quantos tiver
        for(var i=0; i < total_servos; i++){
          THeadCell = THeadRow.insertCell(-1);
          THeadCell.innerHTML = i; //adiciona todos os servos
        }
                
        //Criando linhas da tabela...
        id_disp_nova_celula=1;  //zerar contador ja que é uma tabela do zero...
        for (x in animation) {  //linha a linha
          //nova linha
          var linha = tabela.insertRow(numlinha); // Create an empty <tr> element and add it to the last position of the table
          linha.addEventListener('click', function(){atualizalinha(this.rowIndex)});
          
          //agora as celulas dessa linha...
          var celula = linha.insertCell(0);     //nova celula (primeira é do Audio!)
          celula.innerHTML = animation[x].a;    //pega nome do audio e joga na primeira celula
          celula.id = id_disp_nova_celula;
          id_disp_nova_celula++;
          
          var celula = linha.insertCell(-1);     //nova celula (segunda é do tempo!)
          celula.innerHTML = animation[x].t;    //pega valor do tempo e joga na segunda celula
          celula.id = id_disp_nova_celula;
          id_disp_nova_celula++;
          for(y in animation[x].s){
            var celula = linha.insertCell(-1);      //nova celula, ja temos a do tempo entao "-1" The value of -1 can also be used; which results in that the new cell will be inserted at the last position.
            celula.innerHTML = animation[x].s[y];    //pega valor da celula do OBJ e joga na celula da tabela
            celula.id = id_disp_nova_celula;
            id_disp_nova_celula++;
          }
          
          numlinha++;
        }

        atualizalinha(1);  //seleciona primeira linha
        console.log(path);
        
     }
     
    function salvarTabelaSD(idTabela){
      var tabela = document.getElementById(idTabela);     //captura a tabela
      total_linhas = tabela.rows.length;                  //descobre total de linhas. começa em 1... ja o Id começa em 0 !!!
      //console.log("Total linhas: " + total_linhas);
      
      var newObjJSON = JSON_obj_SD;                       //copia ojeto que foi lido do SD
      newObjJSON.animation = [];                          //apaga array animation completamente
      //console.log(JSON.stringify(newObjJSON)); 
      for(var i=1; i < total_linhas; i++){                //ex lenght = 4 entao tempo de 0 a 3 sendo que 0 é o cabeçalho 
        //console.log("Linha" + i);                       //linha a linha
        
        var temp_array = {"a":"","t":0,"s":[]};           //array temporario
        
        //console.log("Numero celulas dessa linha: "+ tabela.rows[i].cells.length);
        for(var y=0; y < tabela.rows[i].cells.length; y++){                          //celula a celula
          console.log("linha: "+i+", celula: "+ y + ", Valor: "+ tabela.rows[i].cells[y].innerHTML); 
          if(y===0){
            temp_array.a = tabela.rows[i].cells[y].innerHTML;     //copia conteudo da primeira celula como audio
          }else if(y===1){
            temp_array.t = Number(tabela.rows[i].cells[y].innerHTML);     //segunda celula tempo
          }else{
            temp_array.s.push(Number(tabela.rows[i].cells[y].innerHTML)); //restante são servos... celula para array
          }
          
        }
       
        //console.log(JSON.stringify(temp_array));
        newObjJSON.animation.push(temp_array);          //empurra o array temporario no animation

      }
      console.log(JSON.stringify(newObjJSON)); 
      var pathSD = document.getElementById("motionNameMenuId").innerText;   //pega campo "Arquivo: teste.json"
      pathSD = "/motion/" + pathSD.replace("Arquivo: ","");                 //adiciona motion e retira a parte da palavra arquivos.
      upload_json(JSON.stringify(newObjJSON), pathSD);
      alert("Arquivo slavo!");
    }




      // funcao ajax para carregar um arquivo .json do SD card==================================
      function loadmoveSD(path) {
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function() {
          if (this.readyState == 4 && this.status == 200) {
            JSON_obj_SD = JSON.parse(this.responseText);  //decodifica o json de retorno
            console.log(JSON.stringify(JSON_obj_SD));
            
            //testar se  numero de servos no json é diferente do robo entao nao carrega 
            if(Number(JSON_obj_SD.numServos) != total_servos){
              console.log("Servos Json: "+ JSON_obj_SD.numServos +"Robo atual: "+total_servos+" servos. Diferente!");
              return;
            }
            document.getElementById("boxTabela").style.visibility = "visible";    
            limparTabela();           //limpar tabela antes de por novos dados
            gerarTabela(path);        //gerar tabela
            //motion_path = path;     //salva qual é o nome                        
          }//fim tratamento da resposta
        };
        xhttp.open("GET", path, true);
        xhttp.send();
      }
      
  function loadAudioListSD(){
    console.log("[INFO] Carregando lista de audios...");
    var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function() {
          if (this.readyState == 4 && this.status == 200) {
            var jsonAudioObj = JSON.parse(this.responseText);  //decodifica o json de retorno
            
            
            var html_temp ="<option selected></option>";        //primeira linha vazia
            html_temp +="<option>STOP</option>";                //STOP
            for(x in jsonAudioObj){
              //procura .mp3 no nome do arquivo. search retorna -1 quando nao acha
              if(jsonAudioObj[x].name.search(".mp3") > 1){
                html_temp+="<option>"+ jsonAudioObj[x].name.replace("/audio/","") +"</option>";
              }
            }     
            document.getElementById("selectMP3id").innerHTML = html_temp;  //joga todo o html gerado no dropdown
            console.log("[INFO] Lista de audios OK");            
          }else{
            document.getElementById("selectMP3id").innerHTML = "<option>carregando...</option>";  //joga todo o html gerado no dropdown
          }
        };
        xhttp.open("GET", "/list?dir=/audio", true);
        xhttp.send();
  }    

//carrega as configuraçoes do robo.
  function loadConfig(){
    console.log("[INFO] Carregando configurações...");
    var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function() {
          if (this.readyState == 4 && this.status == 200) {
            var myObj = JSON.parse(this.responseText);  //decodifica o json de retorno
            
            document.getElementById("nomeRobo").innerHTML = myObj.nomeRobo;  //joga todo o html gerado na coluna
            //document.getElementById("nomeCriador").value = myObj.nomeCriador;  //joga todo o html gerado na coluna
            total_servos = Number(myObj.numServos);
            console.log(myObj.nomeRobo);
            console.log("[INFO] Configurações lidas.");            
          }else{
            document.getElementById("nomeRobo").innerHTML = "carregando...";  //joga todo o html gerado no dropdown
          }
        };
        xhttp.open("GET", "/config/config.json", true);
        xhttp.send();
  }    

      //ENVIAR JSON EM TXT PARA O PATH DO SD================================================================================= 
    function upload_json(txtJSON, pathSD){
      if(txtJSON.length===0){
        document.getElementById("arquivos").innerHTML = "<p class='help is-danger'>Campo nome vazio!</p>";
      }
      if(pathSD.length===0){
        document.getElementById("arquivos").innerHTML = "<p class='help is-danger'>path vazio!</p>";
      }
      //criando requisição PUT
      var xhttp = new XMLHttpRequest();
      xhttp.onreadystatechange = function() {
          if (this.readyState == 4 && this.status == 200) {
            document.getElementById("arquivos").innerHTML = "<p class='help is-success'>Arquivo enviado!</p>";
          }else{
            document.getElementById("arquivos").innerHTML = "<p class='help is-danger'>Erro! Não foi enviado...</p>";
          }
        };
        var formData = new FormData();
        formData.append("data", new Blob([txtJSON], { type:"application/json"}), pathSD);
        
        xhttp.open("POST", "/edit");
        xhttp.send(formData);

    }

  </script>
    
  </body>
</html>